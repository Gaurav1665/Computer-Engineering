
### 1. Admin
Attributes:
- adminID: int
- name: string
- email: string
- password: string

Methods:
+ addEmployee(employeeDetails: object): void
+ editEmployeeDetails(employeeID: int, updatedDetails: object): void
+ grantPrivileges(employeeID: int, privileges: string): void
+ revokePrivileges(employeeID: int, privileges: string): void
+ assignManager(employeeID: int): void
+ deallocateManager(managerID: int): void
+ manageEmployeeRecords(): list
+ login(email: string, password: string): bool
+ logout(): void

### 2. Manager
Attributes:
- managerID: int
- name: string
- department: string
- email: string
- password: string

Methods:
+ approveLeaveRequests(leaveRequestID: int): void
+ assignRoles(employeeID: int, role: string): void
+ assignTasks(employeeID: int, taskDetails: object): void
+ updateEmployeeDepartment(employeeID: int, department: string): void
+ viewLeaveRecords(): list
+ login(email: string, password: string): bool
+ logout(): void

### 3. Employee
Attributes:
- employeeID: int
- name: string
- role: string
- department: string
- salary: float
- email: string
- password: string

Methods:
+ updateTaskStatus(taskID: int, status: string): void
+ applyForLeave(leaveDetails: object): void
+ viewSalaryDetails(): list
+ login(email: string, password: string): bool
+ logout(): void

### 4. Task
Attributes:
- taskID: int
- title: string
- description: string
- assignedTo: int
- status: string
- deadline: string

Methods:
+ updateStatus(newStatus: string): void
+ viewTaskDetails(): object

### 5. LeaveRequest
Attributes:
- leaveRequestID: int
- employeeID: int
- startDate: string
- endDate: string
- reason: string
- status: string

Methods:
+ applyForLeave(): void
+ approveLeave(): void
+ denyLeave(): void
+ viewLeaveStatus(): string

### 6. Department
Attributes:
- departmentID: int
- name: string
- managerID: int
- employeeCount: int

Methods:
+ addEmployeeToDepartment(employeeID: int): void
+ removeEmployeeFromDepartment(employeeID: int): void
+ updateDepartmentDetails(departmentDetails: object): void

### 7. Salary
Attributes:
- employeeID: int
- basicPay: float
- allowances: float
- deductions: float
- netSalary: float
- paymentHistory: list

Methods:
+ calculateNetSalary(): float
+ viewSalaryDetails(): list
